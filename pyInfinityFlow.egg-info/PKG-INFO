Metadata-Version: 2.1
Name: pyInfinityFlow
Version: 1.0.0
Summary: Impute Flow Cytometry values between overlapping panels with XGBoost regression.
Home-page: https://github.com/KyleFerchen/pyInfinityFlow
Author: Kyle Ferchen
Author-email: Kyle Ferchen <ferchenkyle@gmail.com>
License: MIT License
        
        Copyright (c) 2022 Kyle Ferchen
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/KyleFerchen/pyInfinityFlow
Project-URL: Bug Tracker, https://github.com/KyleFerchen/pyInfinityFlow/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: umap-learn>=0.5
Requires-Dist: xgboost>=1.6
Requires-Dist: scanpy>=1.9
Requires-Dist: pyarrow>=9.0
Requires-Dist: leidenalg
Provides-Extra: doc
Requires-Dist: sphinx~=4.5.0; extra == "doc"
Requires-Dist: myst-parser; extra == "doc"
Requires-Dist: nbsphinx; extra == "doc"

# pyInfinityFlow

**pyInfinityFlow** is a Python package that enables imputation of hundreds of features from Flow Cytometry using XGBoost regression[<sup>1</sup>](https://dl.acm.org/doi/abs/10.1145/2939672.2939785). It is an adaptation of the [original implementation in R](https://github.com/ebecht/infinityFlow)[<sup>2</sup>](https://www.science.org/doi/full/10.1126/sciadv.abg0505) with the goal of optimizing the workflow for large datasets by increasing the speed and memory efficiency of the analysis pipeline. 

The package includes tools to read and write FCS files, following the FCS3.1 file standard, into AnnData objects, allowing for easy downstream analysis of single-cell data with [Scanpy](https://scanpy.readthedocs.io/en/stable/index.html)[<sup>3</sup>](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-017-1382-0?ref=https://githubhelp.com) and [UMAP](https://umap-learn.readthedocs.io/en/latest/index.html)[<sup>4</sup>](https://arxiv.org/abs/1802.03426).

Read more about the pyInfinityFlow package on its [Read the Docs page](https://pyinfinityflow.readthedocs.io/en/latest/)!


## Graphical Summary
<img src="https://github.com/KyleFerchen/pyInfinityFlow/blob/main/images/graphical_summary.png?raw=true"
    style="width: 1600px"
    alt="Graphical Summary" 
    onerror="this.src='./images/graphical_summary.png';" />

## Recommended Installation
It is recommended to set up a virtual environment to install the package.

Creating a new conda environment and installing pyInfinityFlow:
```BASH
conda create -n pyInfinityFlow python=3.8
conda activate pyInfinityFlow

pip install pyInfinityFlow
```

Then pyInfinityFlow will be installed in a conda environment named 'pyInfinityFlow'.


## Quickstart
To run the pyInfinityFlow pipeline, we can use this command:

```BASH
pyInfinityFlow --data_dir /home/kyle/Documents/GitHub/pyInfinityFlow/example_data/mouse_lung_dataset_subset/ \
    --out_dir /media/kyle_ssd1/example_outputs/ \
    --backbone_annotation /home/kyle/Documents/GitHub/pyInfinityFlow/example_data/mouse_lung_dataset_subset_backbone_anno.csv \
    --infinity_marker_annotation /home/kyle/Documents/GitHub/pyInfinityFlow/example_data/mouse_lung_dataset_subset_infinity_marker_anno.csv
```

## Selected References
[<font size="2"><sup>1</sup> Chen, T., Guestrin, C. XGBoost: A scalable tree boosting system, in Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (Association for Computing Machinery, 2016), pp. 785â€“794.</font>](https://dl.acm.org/doi/abs/10.1145/2939672.2939785)

[<font size="2"><sup>2</sup> Becht, E., Tolstrup, D., Dutertre, C. A., Morawski, P. A., Campbell, D. J., Ginhoux, F., ... & Headley, M. B. (2021). High-throughput single-cell quantification of hundreds of proteins using conventional flow cytometry and machine learning. Science advances, 7(39), eabg0505. </font>](https://www.science.org/doi/full/10.1126/sciadv.abg0505)

[<font size="2"><sup>3</sup> Wolf, F. A., Angerer, P., & Theis, F. J. (2018). SCANPY: large-scale single-cell gene expression data analysis. Genome biology, 19(1), 1-5. </font>](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-017-1382-0?ref=https://githubhelp.com)

[<font size="2"><sup>4</sup> McInnes, L., Healy, J., & Melville, J. (2018). Umap: Uniform manifold approximation and projection for dimension reduction. arXiv preprint arXiv:1802.03426. </font>](https://arxiv.org/abs/1802.03426)
